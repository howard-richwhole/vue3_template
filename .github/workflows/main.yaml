name: main action
on:
  push:
    branches: [ deploy/online, deploy/beta, deploy/rc ]
env:
  IMAGE_NAME: ope/ope.mobile.frontend.vue
jobs:
  build_web:
    name: 編譯程式
    runs-on: ubuntu-latest
    outputs:
      BUILD_VERSION: ${{ steps.generate_build_version.outputs.build_version }}
    steps:
      - name: 檢查分支
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: 產生版本號
        id: generate_build_version
        run: |
          BUILD_VERSION=1.0.`git rev-list HEAD --count`.$GITHUB_RUN_NUMBER
          echo "::set-output name=build_version::$BUILD_VERSION"
          echo "$IMAGE_NAME:$BUILD_VERSION"

      - name: 初始化node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: 安裝依賴
        run: |
          npm ci
          npx browserslist@latest --update-db

      - name: 編譯rc環境
        if: github.ref == 'refs/heads/deploy/rc'
        run: npm run build:rc
          
      - name: 編譯beta環境
        if: github.ref == 'refs/heads/deploy/beta'
        run: npm run build:beta

      - name: 編譯online環境
        if: github.ref == 'refs/heads/deploy/online'
        run: npm run build:prod

      - name: 加入額外檔案
        run: |
          echo "BUILD_NUMBER=`git rev-list HEAD --count`" >> .env
          echo "${{ steps.generate_build_version.outputs.build_version }}" > dist/version.html
          echo "OK" > dist/healthCheck.html
          cat .env

      - name: 留存artifact
        uses: actions/upload-artifact@v2
        with:
          name: publish
          path: |
            dist
            .env
            Dockerfile
            nginx.conf
          retention-days: 1

  deploy_aws:
    name: 部屬至AWS
    runs-on: ubuntu-latest
    needs: build_web
    steps:      
      - name: 下載artifact
        uses: actions/download-artifact@v2
        with:
          name: publish

      - name: 設定AWS驗證
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: 登入AWS
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: 建置image - ${{ env.IMAGE_NAME }}:${{ needs.build_web.outputs.BUILD_VERSION }}
        id: build-image
        run: |
          source .env
          docker build -t $AWS_REGISTRY_URL/$IMAGE_NAME:$BUILD_VERSION -t $AWS_REGISTRY_URL/$IMAGE_NAME:latest .
          docker push -a $AWS_REGISTRY_URL/$IMAGE_NAME
          ls -al
        env:
          AWS_REGISTRY_URL: ${{ secrets.AWS_REGISTRY_URL }}
          BUILD_VERSION: ${{ needs.build_web.outputs.BUILD_VERSION }}